(function() {
  shaders["terrain.fs"] = THREE.ShaderChunk["common"] + "\n\nvarying vec3 lightRGB;\nvarying vec3 lightHSV;\nvarying vec3 rim;\n\nvarying float map2blend;\n\n// uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 diffuse2;\nuniform sampler2D map;\nuniform sampler2D map2;\n\n" + THREE.ShaderChunk["uv_pars_fragment"] + "\n\n" + THREE.ShaderChunk["shadowmap_pars_fragment"] + "\n\n" + shaders["hsv"] + "\n\n// uniform sampler2D heightmap;\n\nvoid main(void) {\n\n    // vec4 srcColor = texture2D(map2, vUv * 1.0);\n    // vec4 dstColor = texture2D(map, vUv);\n    vec3 srcColor = diffuse2 * (map2blend);\n    vec3 dstColor = diffuse * (1.0 - map2blend);\n    float srcAlpha = map2blend;\n\n    vec4 diffuseRGB = texture2D(map, vUv) * vec4(srcColor + dstColor, 1.0);\n\n    if (diffuseRGB.a > 0.1) {\n\n      vec3 shadowMask = vec3(1.0);\n\n      " + THREE.ShaderChunk["shadowmap_fragment"] + "\n\n      vec3 diffuseHSV = rgb2hsv(diffuseRGB.rgb);\n      diffuseHSV.g = diffuseHSV.g + (1.0 - min(lightHSV.b * shadowMask.r * 0.5, 1.0));\n      diffuseHSV.b = diffuseHSV.b * shadowMask.r;\n      diffuseRGB = vec4(hsv2rgb(diffuseHSV) * lightRGB, 1.0);\n      gl_FragColor = diffuseRGB + vec4(rim,1.0);\n    }\n    else {\n      discard;\n    }\n\n}\n";

}).call(this);
